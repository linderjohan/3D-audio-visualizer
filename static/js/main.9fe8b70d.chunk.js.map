{"version":3,"sources":["components/ThreeScene.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["stats","Stats","showPanel","document","body","appendChild","dom","ThreeScene","Component","constructor","props","super","this","state","paused","analyserNode","start","bind","stop","animate","renderScene","resize","createRow","createRandomRow","updateFrequencies","handleScroll","incrementColor","interpolate","rotateCamera","translateCamera","handleDrag","e","preventDefault","console","log","clientX","camera","position","x","width","clientY","y","height","z","rowamount","deltaY","pointLight","before","after","atPoint","Math","abs","allFreq","Uint8Array","frequencyBinCount","frequencies","getByteFrequencyData","lastIndex","i","push","res","index","amount","sum","k","mean","isNaN","freq","dbFreq","log10","spectrumGeometry","THREE","mesh","cubeGeometry","castShadow","updateMatrix","merge","geometry","matrix","white","c","undefined","allrows","material","uniforms","colorB","value","phong","type","colorA","fragmentShader","getElementById","textContent","vertexShader","lights","spectrum","sceneRoot","add","unshift","wireframe","color","opacity","transparent","line","allwireframes","length","remove","pop","random","recentColor","oldColor","r","g","b","event","aspect","querySelector","offsetWidth","offsetHeight","updateProjectionMatrix","renderer","setSize","componentDidMount","pow","ceil","now","Date","delta","then","interval","window","addEventListener","scene","rotation","PI","antialias","setClearColor","mount","domElement","set","componentDidUpdate","oldProps","newProps","setState","componentWillUnmount","removeEventListener","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","before1","before2","duration1","duration2","begin","forEach","item","performance","end","render","ref","Error","align","App","exact","path","component","Index","loading","displayControls","display","update","imageload","handleUpload","handlePlay","handlePause","AudioContext","webkitAudioContext","music","src","URL","createObjectURL","target","files","audioCtx","audioSourceNode","createMediaElementSource","createAnalyser","fftSize","connect","destination","Float32Array","getFloatFrequencyData","style","parentNode","childNodes","id","className","draggable","onChange","controls","onPlay","onPause","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fe8b70d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import ReactDOM from 'react-dom'\n// import { Canvas } from 'react-three-fiber'\nimport * as THREE from 'three';\nimport Stats from 'stats.js'\n\nvar stats = new Stats();\nstats.showPanel( 2 ); // 0: fps, 1: ms, 2: mb, 3+: custom\nstats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom\ndocument.body.appendChild( stats.dom );\n\nclass ThreeScene extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      paused: this.props.paused,\n      analyserNode: this.props.analyserNode\n    }\n\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n    this.renderScene = this.renderScene.bind(this);\n    this.resize = this.resize.bind(this);\n    this.createRow = this.createRow.bind(this);\n    this.createRandomRow = this.createRandomRow.bind(this);\n    this.updateFrequencies = this.updateFrequencies.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.incrementColor = this.incrementColor.bind(this);\n    this.interpolate = this.interpolate.bind(this);\n    this.rotateCamera = this.rotateCamera.bind(this);\n    this.translateCamera = this.translateCamera.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleDrag(e) {\n    e.preventDefault();\n    console.log(e);\n  }\n\n  rotateCamera(e) {\n\n  }\n\n  translateCamera(e) {\n    console.log(e);\n\n    if(this.clientX !== e.clientX) {\n      this.camera.position.x = 0 + (e.clientX - (this.width/2))/100;\n    }\n\n    if(this.clientY !== e.clientY) {\n      this.camera.position.y = 20 + (-e.clientY + (this.height/2))/100;\n    }\n\n    this.clientX = e.clientX;\n    this.clientY = e.clientY;\n  }\n\n  handleScroll(e) {\n    if(this.state.paused) {\n      if(this.camera.position.z < ((3 * this.rowamount)/8) - 6) {\n          this.camera.position.z += e.deltaY*2;\n          this.pointLight.position.z += e.deltaY*2;\n      }\n\n      if(this.camera.position.z >= ((3 * this.rowamount)/8) - 6) {\n        if(e.deltaY < 0) {\n          this.camera.position.z += e.deltaY*2;\n          this.pointLight.position.z += e.deltaY*2;\n        }\n      }\n    }\n  }\n\n  interpolate(before, after, atPoint) {\n    return Math.abs( before + (after - before) * atPoint );\n  };\n\n  updateFrequencies() {\n    const analyserNode = this.state.analyserNode;\n    const allFreq = new Uint8Array(analyserNode.frequencyBinCount);\n    this.frequencies = [];\n    analyserNode.getByteFrequencyData(allFreq);\n\n    let lastIndex = 0;\n\n    for(let i = 0; i < this.rowamount + 10; ++i) {\n      if(i === 0) {\n        this.frequencies.push( 1 );\n      }\n      else if(i > 0 && i < 5) {\n        let res = this.interpolate( this.frequencies[i-1], allFreq[this.index[5]], 0.02 );\n        this.frequencies.push( res < 0 ? res : res );\n        lastIndex = this.index[i];\n      }\n      else if(i > this.rowamount) {\n        this.frequencies.push( this.interpolate(this.frequencies[i-1], 1, 0.2) );\n        lastIndex = this.index[i];\n      }\n      else if(i === this.rowamount + 10) {\n        this.frequencies.push( 1 );\n      }\n      else {\n        let amount = 0;\n        let sum = 0;\n\n        for(let k = lastIndex; k <= this.index[i+1]; k++) {\n          if(allFreq[k] > 1) {\n            sum += allFreq[k];\n            amount++;\n          }\n        }\n\n        let mean = isNaN(sum/amount) ? 1 : sum/amount;\n        let freq = this.interpolate(this.frequencies[i-1], mean, 0.5);\n        let dbFreq = 700*Math.log10(1 + (freq/255));\n\n        this.frequencies.push( dbFreq );\n        lastIndex = this.index[i];\n      }\n    }\n  }\n\n  createRow() {\n    let spectrumGeometry = new THREE.Geometry();\n    let mesh = new THREE.Mesh();\n\n    for(let i = 0; i < this.rowamount + 10; ++i) {\n      let cubeGeometry = new THREE.BoxGeometry(1, this.frequencies[i]/2.5, 1);\n\n      mesh = new THREE.Mesh(cubeGeometry);\n      mesh.castShadow = true;\n      mesh.position.x = ( (i) - ((this.rowamount + 10) / 2) ) + 0.5;\n      // mesh.position.y = ( this.frequencies[i] / 2 )/10;\n\n      mesh.updateMatrix();\n      spectrumGeometry.merge(mesh.geometry, mesh.matrix);\n    }\n\n    var white = new THREE.Color( 1, 1, 1 );\n    var c = new THREE.Color( 0, 1, 0 );\n\n    if(this.allrows[0] !== undefined) {\n      c = this.incrementColor(this.allrows[0].material.uniforms.colorB.value);\n    }\n    if(this.allrows[0] !== undefined && this.allrows[1] !== undefined) {\n      c = this.incrementColor(this.allrows[0].material.uniforms.colorB.value, this.allrows[1].material.uniforms.colorB.value);\n    }\n\n    let uniforms = THREE.UniformsUtils.merge([\n        THREE.ShaderLib.phong.uniforms,\n        { colorB: {type: 'vec3', value: c }},\n        { colorA: {type: 'vec3', value: white}}\n    ]);\n\n    var material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        fragmentShader: document.getElementById(\"fragmentShader\").textContent,\n        vertexShader: document.getElementById(\"vertexShader\").textContent,\n        lights: true\n    });\n\n    let spectrum = new THREE.Mesh(spectrumGeometry, material);\n    this.sceneRoot.add(spectrum);\n    this.allrows.unshift(spectrum);\n\n    let wireframe = new THREE.EdgesGeometry(spectrumGeometry);\n    material = new THREE.MeshPhongMaterial({color: new THREE.Color( 0, 0, 0, 0.5 ), opacity: 0.2, transparent: true});\n    let line = new THREE.LineSegments(wireframe, material);\n    this.sceneRoot.add(line);\n    this.allwireframes.unshift(line);\n\n    if(this.allwireframes.length > 1) {\n      this.sceneRoot.remove(this.allwireframes[1]);\n      this.allwireframes.pop();\n    }\n\n    const whichToRemove = 50;\n\n    if(this.allrows.length > whichToRemove) {\n      this.sceneRoot.remove(this.allrows[whichToRemove]);\n      this.allrows.pop();\n    }\n  }\n\n  createRandomRow() {\n    let spectrumGeometry = new THREE.BoxGeometry();\n    let mesh = new THREE.Mesh();\n\n    for(let i = 0; i < this.rowamount; ++i) {\n      let cubeGeometry = new THREE.BoxGeometry(1, Math.random()*100, 1);\n      mesh = new THREE.Mesh(cubeGeometry);\n      mesh.position.x = ( i - (this.rowamount/2) ) + 0.5;\n      // mesh.position.y = ( this.frequencies[i] / 2 )/10;\n\n      mesh.updateMatrix();\n      spectrumGeometry.merge(mesh.geometry, mesh.matrix);\n    }\n\n    var white = new THREE.Color( 'white' );\n    var c = new THREE.Color(0,1,0);\n\n    let uniforms = {\n      colorB: {type: 'vec3', value: c},\n      colorA: {type: 'vec3', value: white}\n      }\n\n      var material = new THREE.ShaderMaterial({\n          uniforms: uniforms,\n          fragmentShader: document.getElementById(\"fragmentShader\").textContent,\n          vertexShader: document.getElementById(\"vertexShader\").textContent\n      })\n\n    let spectrum = new THREE.Mesh(spectrumGeometry, material);\n    this.sceneRoot.add(spectrum);\n  }\n\n  incrementColor(recentColor, oldColor = null) {\n    let r = recentColor.r;\n    let g = recentColor.g;\n    let b = recentColor.b;\n\n    if(oldColor === null) {\n      r += 0.001;\n      g -= 0.001;\n      b += 0.001\n      return new THREE.Color(r, g, b);\n    }\n\n    //red channel\n    if(r - oldColor.r > 0) {\n      r += 0.001;\n      if(r >= 1) {\n        r -= 0.002;\n      }\n    }\n    else {\n      r -= 0.001;\n      if(r <= 0.5) {\n        r += 0.002\n      }\n    }\n\n    //green channel\n    if(g - oldColor.g > 0) {\n      g += 0.002;\n      if(g >= 1) {\n        g -= 0.004;\n      }\n    }\n    else {\n      g -= 0.002;\n      if(g <= 0.5) {\n        g += 0.004\n      }\n    }\n\n    //blue channel\n    if(b - oldColor.b > 0) {\n      b += 0.005;\n      if(b >= 1) {\n        b -= 0.01;\n      }\n    }\n    else {\n      b -= 0.005;\n      if(b <= 0.5) {\n        b += 0.01\n      }\n    }\n    return new THREE.Color(r, g, b);\n  }\n\n  resize(event) {\n    this.camera.aspect = document.querySelector(\".canvas\").offsetWidth / document.querySelector(\".canvas\").offsetHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(document.querySelector(\".canvas\").offsetWidth, document.querySelector(\".canvas\").offsetHeight);\n\n    this.width = document.querySelector(\".canvas\").offsetWidth;\n    this.height = document.querySelector(\".canvas\").offsetHeight;\n  }\n\n  componentDidMount() {\n    //constant for logaritm\n    this.rowamount = 128;\n    this.c = Math.pow(3157, (1/Math.pow(this.rowamount, 1/2)));\n    this.index = [];\n    for(let i = 0; i < this.rowamount; ++i) {\n      this.index.push( Math.ceil(Math.pow(this.c, Math.pow(i, 1/2)) - 1) );\n    }\n\n    this.now = Date.now();\n    this.delta = Date.now();\n    this.then = Date.now();\n    this.interval = 1000/25;\n\n    window.addEventListener('resize', this.resize);\n    document.querySelector(\".canvas\").addEventListener('wheel', this.handleScroll);\n    document.querySelector(\".canvas\").addEventListener('dragstart', this.handleDrag);\n    document.querySelector(\".canvas\").addEventListener('dragover', this.handleDrag);\n    // document.querySelector(\".canvas\").addEventListener('mousemove', this.translateCamera);\n    this.height = document.querySelector(\".canvas\").offsetHeight;\n    this.width = document.querySelector(\".canvas\").offsetWidth;\n\n    this.allrows = [];\n    this.allwireframes = [];\n\n    //ADD SCENE\n    this.scene = new THREE.Scene();\n    this.sceneRoot = new THREE.Object3D();\n    this.scene.add(this.sceneRoot);\n\n    //ADD CAMERA\n    this.camera = new THREE.PerspectiveCamera(\n      60, this.width / this.height, 5, 500\n    );\n\n    this.camera.position.z = 85;\n    this.camera.position.y = 20;\n    this.camera.rotation.x = -(Math.PI * 0.05);\n\n    //ADD RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor('#000');\n    this.renderer.setSize(this.width, this.height);\n    this.mount.appendChild(this.renderer.domElement);\n\n    //add light\n    this.pointLight = new THREE.PointLight( 0xefefff, 10, 300, 2 );\n    this.pointLight.position.set(0, this.rowamount, this.rowamount);\n    this.pointLight.castShadow = true;\n\t\tthis.scene.add( this.pointLight );\n\n    this.start();\n  }\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props\n    if(oldProps !== newProps) {\n      this.setState({ paused: newProps.paused, analyserNode: newProps.analyserNode });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n    document.querySelector(\".canvas\").removeEventListener('mousewheel', this.handleScroll);\n    document.querySelector(\".canvas\").removeEventListener('dragstart', this.handleDrag);\n    // document.querySelector(\".canvas\").removeEventListener('dragstart', this.handleDrag);\n    // document.querySelector(\".canvas\").removeEventListener('mousemove', this.translateCamera);\n\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    this.now = Date.now();\n    this.delta = this.now - this.then;\n    var before1, before2, duration1, duration2 = 0;\n\n    if (this.delta > this.interval) {\n      if(!this.state.paused) {\n        stats.begin();\n\n        // this.camera.position.z = 85;\n        // this.camera.position.y = 20;\n        // this.camera.rotation.x = -(Math.PI * 0.05);\n\n        this.allrows.forEach((item, i) => {\n          item.position.z -= 2;\n          // this.allwireframes[i].position.z -= 2;\n        });\n\n        before1 = performance.now();\n        this.updateFrequencies();\n        duration1 = (performance.now() - before1);\n\n        before2 = performance.now();\n        this.createRow();\n        duration2 = (performance.now() - before2);\n\n        stats.end();\n      }\n      this.then = this.now - (this.delta % this.interval);\n    }\n\n    if(duration1 > 1) {\n      console.log(\"Tid att uppdatera frekvenser(ms):\", duration1);\n    }\n    if(duration2 > 20) {\n      console.log(\"Tid att skapa en row(ms):\", duration2);\n    }\n\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return(\n        <div\n          ref={(mount) => { this.mount = mount }}\n        />\n    )\n  }\n}\n\nexport default ThreeScene\n","import React, { Component } from 'react';\n\nclass Error extends Component {\n\trender() {\n    \treturn (\n\t\t\t<div align=\"center\"><h1>Ajajaaaaj nu var det något som gick lite fel va? </h1>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Henke does not approve!</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Error;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport \"./css/index.scss\";\n\nimport ThreeScene from \"./components/ThreeScene\";\nimport Error from \"./components/Error\";\n\nclass App extends Component {\n\trender() {\n\t\t// let url = window.location.href.replace(\"http://\", \"\").replace(\".vlq.se\", \"\").split(\"/\");\n\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={\"/\"} component={Index} />\n\t\t\t\t\t<Route component={Error} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\n//https://stackoverflow.com/questions/44188969/how-to-pass-the-match-when-using-render-in-route-component-from-react-router-v4\nclass Index extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tpaused: true,\n\t\t\tdisplayControls: { display: \"none\" },\n\t\t\tanalyserNode: {}\n\t\t};\n\n\t\tthis.update = this.update.bind(this);\n\t\tthis.imageload = this.imageload.bind(this);\n\t\tthis.handleUpload = this.handleUpload.bind(this);\n\t\tthis.handlePlay = this.handlePlay.bind(this);\n\t\tthis.handlePause = this.handlePause.bind(this);\n\t}\n\n\thandlePlay(e) {\n\t\tthis.setState({ paused: false });\n\t}\n\n\thandlePause(e) {\n\t\tthis.setState({ paused: true });\n\t}\n\n\thandleUpload(e) {\n\t\tconst AudioContext = (window.AudioContext || window.webkitAudioContext);\n\t\tthis.setState({ displayControls: { display: \"block\" } });\n\n\t\tthis.music = document.getElementById('music');\n\t\tthis.music.src = URL.createObjectURL(e.target.files[0]);\n\t\tlet audioCtx = new AudioContext();\n\t\tconst audioSourceNode = audioCtx.createMediaElementSource(this.music);\n\n\t\tconst analyserNode = audioCtx.createAnalyser();\n\t\tanalyserNode.fftSize = 8192;\n\n\t\taudioSourceNode.connect(analyserNode);\n\t\tanalyserNode.connect(audioCtx.destination);\n\n\t\tthis.setState({ analyserNode });\n\n\t\tthis.frequencies = new Float32Array(analyserNode.frequencyBinCount);\n\t\tanalyserNode.getFloatFrequencyData(this.frequencies);\n\t}\n\n\t// handleMusicEnd(e) {\n\t// \tURL.revokeObjectURL(this.music.src);\n\t// }\n\n\tupdate() {\n\t\tthis.setState({ loading: false });\n\t}\n\n\timageload(e) {\n\t\te.target.style.display = \"block\";\n\t\te.target.parentNode.childNodes[0].style.display = \"none\";\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.update();\n\t}\n\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn <div id=\"root-loading\"><div className=\"root-spinner\"></div></div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<main className=\"wrapper\">\n\t\t\t\t<div className=\"canvas\" draggable=\"true\">\n\t\t\t\t\t<ThreeScene analyserNode={this.state.analyserNode} paused={this.state.paused} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t<input type=\"file\" id=\"input\" onChange={this.handleUpload} />\n\t\t\t\t\t<audio id=\"music\" controls onPlay={this.handlePlay} onPause={this.handlePause} style={this.state.displayControls}></audio>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default App;\n//<Route exact path={settings.url + \"verify/:string\"} render={({match}) => <Verify username={this.state.username} match={match}></Verify>} />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config); \n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}
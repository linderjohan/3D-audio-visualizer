{"version":3,"sources":["sju-sorger.mp3","components/ThreeScene.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","stats","Stats","showPanel","document","body","appendChild","dom","ThreeScene","Component","constructor","props","super","this","state","paused","analyserNode","start","bind","stop","animate","renderScene","resize","createRow","createRandomRow","updateFrequencies","handleScroll","incrementColor","interpolate","rotateCamera","translateCamera","handleDrag","e","preventDefault","clientX","camera","position","x","width","clientY","y","height","z","rowamount","deltaY","pointLight","before","after","atPoint","Math","abs","allFreq","Uint8Array","frequencyBinCount","frequencies","getByteFrequencyData","lastIndex","i","push","res","index","amount","sum","k","mean","isNaN","freq","dbFreq","log10","spectrumGeometry","THREE","mesh","cubeGeometry","castShadow","updateMatrix","merge","geometry","matrix","white","c","undefined","allrows","material","uniforms","colorB","value","phong","type","colorA","fragmentShader","getElementById","textContent","vertexShader","lights","spectrum","sceneRoot","add","unshift","wireframe","color","opacity","transparent","line","allwireframes","length","remove","pop","random","recentColor","oldColor","r","g","b","event","aspect","querySelector","offsetWidth","offsetHeight","updateProjectionMatrix","renderer","setSize","componentDidMount","pow","ceil","now","Date","delta","then","interval","window","addEventListener","scene","rotation","PI","antialias","setClearColor","mount","domElement","set","componentDidUpdate","oldProps","newProps","setState","componentWillUnmount","removeEventListener","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","before1","before2","begin","forEach","item","performance","end","render","ref","song","require","App","Index","loading","created","displayControls","display","audioCtx","AudioContext","update","imageload","handleUpload","handlePlay","handlePause","resume","target","style","parentNode","childNodes","webkitAudioContext","music","src","audioSourceNode","createMediaElementSource","createAnalyser","fftSize","connect","destination","Float32Array","getFloatFrequencyData","className","draggable","id","controls","onPlay","onPause","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3e9922b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sju-sorger.978ee945.mp3\";","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom'\n// import { Canvas } from 'react-three-fiber'\nimport * as THREE from 'three';\nimport Stats from 'stats.js';\n\nvar stats = new Stats();\nstats.showPanel(2); // 0: fps, 1: ms, 2: mb, 3+: custom\nstats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\ndocument.body.appendChild(stats.dom);\n\nclass ThreeScene extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      paused: this.props.paused,\n      analyserNode: this.props.analyserNode\n    };\n\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n    this.renderScene = this.renderScene.bind(this);\n    this.resize = this.resize.bind(this);\n    this.createRow = this.createRow.bind(this);\n    this.createRandomRow = this.createRandomRow.bind(this);\n    this.updateFrequencies = this.updateFrequencies.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.incrementColor = this.incrementColor.bind(this);\n    this.interpolate = this.interpolate.bind(this);\n    this.rotateCamera = this.rotateCamera.bind(this);\n    this.translateCamera = this.translateCamera.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleDrag(e) {\n    e.preventDefault();\n    // console.log(e);\n  }\n\n  rotateCamera(e) {\n\n  }\n\n  translateCamera(e) {\n    // console.log(e);\n\n    if (this.clientX !== e.clientX) {\n      this.camera.position.x = 0 + (e.clientX - (this.width / 2)) / 100;\n    }\n\n    if (this.clientY !== e.clientY) {\n      this.camera.position.y = 20 + (-e.clientY + (this.height / 2)) / 100;\n    }\n\n    this.clientX = e.clientX;\n    this.clientY = e.clientY;\n  }\n\n  handleScroll(e) {\n    if (this.state.paused) {\n      if (this.camera.position.z < ((3 * this.rowamount) / 8) - 6) {\n        this.camera.position.z += e.deltaY * 2;\n        this.pointLight.position.z += e.deltaY * 2;\n      }\n\n      if (this.camera.position.z >= ((3 * this.rowamount) / 8) - 6) {\n        if (e.deltaY < 0) {\n          this.camera.position.z += e.deltaY * 2;\n          this.pointLight.position.z += e.deltaY * 2;\n        }\n      }\n    }\n  }\n\n  interpolate(before, after, atPoint) {\n    return Math.abs(before + (after - before) * atPoint);\n  };\n\n  updateFrequencies() {\n    const analyserNode = this.state.analyserNode;\n    const allFreq = new Uint8Array(analyserNode.frequencyBinCount);\n    this.frequencies = [];\n    analyserNode.getByteFrequencyData(allFreq);\n\n    let lastIndex = 0;\n\n    for (let i = 0; i < this.rowamount + 10; ++i) {\n      if (i === 0) {\n        this.frequencies.push(1);\n      }\n      else if (i > 0 && i < 5) {\n        let res = this.interpolate(this.frequencies[i - 1], allFreq[this.index[5]], 0.02);\n        this.frequencies.push(res < 0 ? res : res);\n        lastIndex = this.index[i];\n      }\n      else if (i > this.rowamount) {\n        this.frequencies.push(this.interpolate(this.frequencies[i - 1], 1, 0.2));\n        lastIndex = this.index[i];\n      }\n      else if (i === this.rowamount + 10) {\n        this.frequencies.push(1);\n      }\n      else {\n        let amount = 0;\n        let sum = 0;\n\n        for (let k = lastIndex; k <= this.index[i + 1]; k++) {\n          if (allFreq[k] > 1) {\n            sum += allFreq[k];\n            amount++;\n          }\n        }\n\n        let mean = isNaN(sum / amount) ? 1 : sum / amount;\n        let freq = this.interpolate(this.frequencies[i - 1], mean, 0.5);\n        let dbFreq = 700 * Math.log10(1 + (freq / 255));\n\n        this.frequencies.push(dbFreq);\n        lastIndex = this.index[i];\n      }\n    }\n  }\n\n  createRow() {\n    let spectrumGeometry = new THREE.Geometry();\n    let mesh = new THREE.Mesh();\n\n    for (let i = 0; i < this.rowamount + 10; ++i) {\n      let cubeGeometry = new THREE.BoxGeometry(1, this.frequencies[i] / 2.5, 1);\n\n      mesh = new THREE.Mesh(cubeGeometry);\n      mesh.castShadow = true;\n      mesh.position.x = ((i) - ((this.rowamount + 10) / 2)) + 0.5;\n      // mesh.position.y = ( this.frequencies[i] / 2 )/10;\n\n      mesh.updateMatrix();\n      spectrumGeometry.merge(mesh.geometry, mesh.matrix);\n    }\n\n    var white = new THREE.Color(1, 1, 1);\n    var c = new THREE.Color(0, 1, 0);\n\n    if (this.allrows[0] !== undefined) {\n      c = this.incrementColor(this.allrows[0].material.uniforms.colorB.value);\n    }\n    if (this.allrows[0] !== undefined && this.allrows[1] !== undefined) {\n      c = this.incrementColor(this.allrows[0].material.uniforms.colorB.value, this.allrows[1].material.uniforms.colorB.value);\n    }\n\n    let uniforms = THREE.UniformsUtils.merge([\n      THREE.ShaderLib.phong.uniforms,\n      { colorB: { type: 'vec3', value: c } },\n      { colorA: { type: 'vec3', value: white } }\n    ]);\n\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      fragmentShader: document.getElementById(\"fragmentShader\").textContent,\n      vertexShader: document.getElementById(\"vertexShader\").textContent,\n      lights: true\n    });\n\n    let spectrum = new THREE.Mesh(spectrumGeometry, material);\n    this.sceneRoot.add(spectrum);\n    this.allrows.unshift(spectrum);\n\n    let wireframe = new THREE.EdgesGeometry(spectrumGeometry);\n    material = new THREE.MeshPhongMaterial({ color: new THREE.Color(0, 0, 0, 0.5), opacity: 0.2, transparent: true });\n    let line = new THREE.LineSegments(wireframe, material);\n    this.sceneRoot.add(line);\n    this.allwireframes.unshift(line);\n\n    if (this.allwireframes.length > 1) {\n      this.sceneRoot.remove(this.allwireframes[1]);\n      this.allwireframes.pop();\n    }\n\n    const whichToRemove = 50;\n\n    if (this.allrows.length > whichToRemove) {\n      this.sceneRoot.remove(this.allrows[whichToRemove]);\n      this.allrows.pop();\n    }\n  }\n\n  createRandomRow() {\n    let spectrumGeometry = new THREE.BoxGeometry();\n    let mesh = new THREE.Mesh();\n\n    for (let i = 0; i < this.rowamount; ++i) {\n      let cubeGeometry = new THREE.BoxGeometry(1, Math.random() * 100, 1);\n      mesh = new THREE.Mesh(cubeGeometry);\n      mesh.position.x = (i - (this.rowamount / 2)) + 0.5;\n      // mesh.position.y = ( this.frequencies[i] / 2 )/10;\n\n      mesh.updateMatrix();\n      spectrumGeometry.merge(mesh.geometry, mesh.matrix);\n    }\n\n    var white = new THREE.Color('white');\n    var c = new THREE.Color(0, 1, 0);\n\n    let uniforms = {\n      colorB: { type: 'vec3', value: c },\n      colorA: { type: 'vec3', value: white }\n    };\n\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      fragmentShader: document.getElementById(\"fragmentShader\").textContent,\n      vertexShader: document.getElementById(\"vertexShader\").textContent\n    });\n\n    let spectrum = new THREE.Mesh(spectrumGeometry, material);\n    this.sceneRoot.add(spectrum);\n  }\n\n  incrementColor(recentColor, oldColor = null) {\n    let r = recentColor.r;\n    let g = recentColor.g;\n    let b = recentColor.b;\n\n    if (oldColor === null) {\n      r += 0.001;\n      g -= 0.001;\n      b += 0.001;\n      return new THREE.Color(r, g, b);\n    }\n\n    //red channel\n    if (r - oldColor.r > 0) {\n      r += 0.001;\n      if (r >= 1) {\n        r -= 0.002;\n      }\n    }\n    else {\n      r -= 0.001;\n      if (r <= 0.5) {\n        r += 0.002;\n      }\n    }\n\n    //green channel\n    if (g - oldColor.g > 0) {\n      g += 0.002;\n      if (g >= 1) {\n        g -= 0.004;\n      }\n    }\n    else {\n      g -= 0.002;\n      if (g <= 0.5) {\n        g += 0.004;\n      }\n    }\n\n    //blue channel\n    if (b - oldColor.b > 0) {\n      b += 0.005;\n      if (b >= 1) {\n        b -= 0.01;\n      }\n    }\n    else {\n      b -= 0.005;\n      if (b <= 0.5) {\n        b += 0.01;\n      }\n    }\n    return new THREE.Color(r, g, b);\n  }\n\n  resize(event) {\n    this.camera.aspect = document.querySelector(\".canvas\").offsetWidth / document.querySelector(\".canvas\").offsetHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(document.querySelector(\".canvas\").offsetWidth, document.querySelector(\".canvas\").offsetHeight);\n\n    this.width = document.querySelector(\".canvas\").offsetWidth;\n    this.height = document.querySelector(\".canvas\").offsetHeight;\n  }\n\n  componentDidMount() {\n    //constant for logaritm\n    this.rowamount = 128;\n    this.c = Math.pow(3157, (1 / Math.pow(this.rowamount, 1 / 2)));\n    this.index = [];\n    for (let i = 0; i < this.rowamount; ++i) {\n      this.index.push(Math.ceil(Math.pow(this.c, Math.pow(i, 1 / 2)) - 1));\n    }\n\n    this.now = Date.now();\n    this.delta = Date.now();\n    this.then = Date.now();\n    this.interval = 1000 / 25;\n\n    window.addEventListener('resize', this.resize);\n    document.querySelector(\".canvas\").addEventListener('wheel', this.handleScroll);\n    document.querySelector(\".canvas\").addEventListener('dragstart', this.handleDrag);\n    document.querySelector(\".canvas\").addEventListener('dragover', this.handleDrag);\n    // document.querySelector(\".canvas\").addEventListener('mousemove', this.translateCamera);\n    this.height = document.querySelector(\".canvas\").offsetHeight;\n    this.width = document.querySelector(\".canvas\").offsetWidth;\n\n    this.allrows = [];\n    this.allwireframes = [];\n\n    //ADD SCENE\n    this.scene = new THREE.Scene();\n    this.sceneRoot = new THREE.Object3D();\n    this.scene.add(this.sceneRoot);\n\n    //ADD CAMERA\n    this.camera = new THREE.PerspectiveCamera(\n      60, this.width / this.height, 5, 500\n    );\n\n    this.camera.position.z = 85;\n    this.camera.position.y = 20;\n    this.camera.rotation.x = -(Math.PI * 0.05);\n\n    //ADD RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor('#000');\n    this.renderer.setSize(this.width, this.height);\n    this.mount.appendChild(this.renderer.domElement);\n\n    //add light\n    this.pointLight = new THREE.PointLight(0xefefff, 10, 300, 2);\n    this.pointLight.position.set(0, this.rowamount, this.rowamount);\n    this.pointLight.castShadow = true;\n    this.scene.add(this.pointLight);\n\n    this.start();\n  }\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if (oldProps !== newProps) {\n      this.setState({ paused: newProps.paused, analyserNode: newProps.analyserNode });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n    document.querySelector(\".canvas\").removeEventListener('mousewheel', this.handleScroll);\n    document.querySelector(\".canvas\").removeEventListener('dragstart', this.handleDrag);\n    // document.querySelector(\".canvas\").removeEventListener('dragstart', this.handleDrag);\n    // document.querySelector(\".canvas\").removeEventListener('mousemove', this.translateCamera);\n\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    this.now = Date.now();\n    this.delta = this.now - this.then;\n    var before1, before2, duration1, duration2 = 0;\n\n    if (this.delta > this.interval) {\n      if (!this.state.paused) {\n        stats.begin();\n\n        // this.camera.position.z = 85;\n        // this.camera.position.y = 20;\n        // this.camera.rotation.x = -(Math.PI * 0.05);\n\n        this.allrows.forEach((item, i) => {\n          item.position.z -= 2;\n          // this.allwireframes[i].position.z -= 2;\n        });\n\n        before1 = performance.now();\n        this.updateFrequencies();\n        duration1 = (performance.now() - before1);\n\n        before2 = performance.now();\n        this.createRow();\n        duration2 = (performance.now() - before2);\n\n        stats.end();\n      }\n      this.then = this.now - (this.delta % this.interval);\n    }\n\n    if (duration1 > 1) {\n      // console.log(\"Tid att uppdatera frekvenser(ms):\", duration1);\n    }\n    if (duration2 > 20) {\n      // console.log(\"Tid att skapa en row(ms):\", duration2);\n    }\n\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div\n        ref={(mount) => { this.mount = mount; }}\n      />\n    );\n  }\n}\n\nexport default ThreeScene;\n","import React, { Component } from 'react';\n\nclass Error extends Component {\n\trender() {\n    \treturn (\n\t\t\t<div align=\"center\"><h1>Ajajaaaaj nu var det något som gick lite fel va? </h1>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Henke does not approve!</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Error;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport \"./css/index.scss\";\n\nimport ThreeScene from \"./components/ThreeScene\";\nimport Error from \"./components/Error\";\nconst song = require(\"./sju-sorger.mp3\");\n\nclass App extends Component {\n\trender() {\n\t\t// let url = window.location.href.replace(\"http://\", \"\").replace(\".vlq.se\", \"\").split(\"/\");\n\n\t\treturn (\n\t\t\t<Index />\n\t\t\t// <BrowserRouter>\n\t\t\t// \t<Switch>\n\t\t\t// \t\t<Route exact path={\"/\"} component={Index} />\n\t\t\t// \t\t<Route component={Error} />\n\t\t\t// \t</Switch>\n\t\t\t// </BrowserRouter>\n\t\t);\n\t}\n}\n\n//https://stackoverflow.com/questions/44188969/how-to-pass-the-match-when-using-render-in-route-component-from-react-router-v4\nclass Index extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tcreated: false,\n\t\t\tpaused: true,\n\t\t\tdisplayControls: { display: \"\" },\n\t\t\tanalyserNode: {}\n\t\t};\n\n\t\tthis.audioCtx = new AudioContext();\n\n\t\tthis.update = this.update.bind(this);\n\t\tthis.imageload = this.imageload.bind(this);\n\t\tthis.handleUpload = this.handleUpload.bind(this);\n\t\tthis.handlePlay = this.handlePlay.bind(this);\n\t\tthis.handlePause = this.handlePause.bind(this);\n\t}\n\n\thandlePlay(e) {\n\t\tif (this.audioCtx.state !== \"running\") this.audioCtx.resume();\n\t\tthis.setState({ paused: false });\n\t}\n\n\thandlePause(e) {\n\t\tthis.setState({ paused: true });\n\t}\n\n\thandleUpload(e) {\n\n\t\tthis.setState({ displayControls: { display: \"block\" } });\n\t\t// console.log(e.target.files[0]);\n\n\n\n\n\n\t}\n\n\t// handleMusicEnd(e) {\n\t// \tURL.revokeObjectURL(this.music.src);\n\t// }\n\n\tupdate() {\n\t\tthis.setState({ loading: false });\n\n\t}\n\n\timageload(e) {\n\t\te.target.style.display = \"block\";\n\t\te.target.parentNode.childNodes[0].style.display = \"none\";\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.update();\n\t\tconst AudioContext = (window.AudioContext || window.webkitAudioContext);\n\n\t\tthis.setState({ created: true });\n\t\tthis.music = document.getElementById('music');\n\n\t\t// this.music = test;\n\t\tthis.music.src = song;\n\t\t// this.music.src = URL.createObjectURL(e.target.files[0]);\n\n\t\tconst audioSourceNode = this.audioCtx.createMediaElementSource(this.music);\n\n\t\tconst analyserNode = this.audioCtx.createAnalyser();\n\t\tanalyserNode.fftSize = 8192;\n\n\t\taudioSourceNode.connect(analyserNode);\n\t\tanalyserNode.connect(this.audioCtx.destination);\n\t\tthis.setState({ analyserNode });\n\n\t\tthis.frequencies = new Float32Array(analyserNode.frequencyBinCount);\n\t\tanalyserNode.getFloatFrequencyData(this.frequencies);\n\n\n\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.setState({ paused: true });\n\n\t}\n\tcomponentDidUpdate() {\n\n\n\t}\n\n\trender() {\n\t\t// if (this.state.loading) {\n\t\t// \treturn <div id=\"root-loading\"><div className=\"root-spinner\"></div></div>;\n\t\t// }\n\n\t\treturn (\n\t\t\t<main className=\"wrapper\">\n\t\t\t\t<div className=\"canvas\" draggable=\"true\">\n\t\t\t\t\t<ThreeScene analyserNode={this.state.analyserNode} paused={this.state.paused} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t{/* <input type=\"file\" id=\"input\" onChange={this.handleUpload} /> */}\n\t\t\t\t\t<audio id=\"music\" controls onPlay={this.handlePlay} onPause={this.handlePause} style={this.state.displayControls}></audio>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default App;\n//<Route exact path={settings.url + \"verify/:string\"} render={({match}) => <Verify username={this.state.username} match={match}></Verify>} />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config); \n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}